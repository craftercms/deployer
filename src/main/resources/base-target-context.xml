<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2007-2019 Crafter Software Corporation. All Rights Reserved.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>
    <context:property-placeholder/>

    <!-- Deployment Processors -->

    <!--
        All processors should be prototypes, so that several instances of them can be used. They will be instanced when the
        pipeline is created
    -->
    <bean id="deploymentProcessor" class="org.craftercms.deployer.impl.processors.AbstractDeploymentProcessor" abstract="true"
          scope="prototype">
        <property name="env" value="${target.env}"/>
        <property name="siteName" value="${target.siteName}"/>
        <property name="targetId" value="${target.id}"/>
    </bean>

    <bean id="gitPullProcessor" class="org.craftercms.deployer.impl.processors.GitPullProcessor" parent="deploymentProcessor">
        <property name="localRepoFolder" value="${target.localRepoPath}"/>
    </bean>

    <bean id="gitPushProcessor" class="org.craftercms.deployer.impl.processors.GitPushProcessor" parent="deploymentProcessor">
        <property name="localRepoFolder" value="${target.localRepoPath}"/>
    </bean>

    <bean id="gitDiffProcessor" class="org.craftercms.deployer.impl.processors.GitDiffProcessor" parent="deploymentProcessor">
        <property name="localRepoFolder" value="${target.localRepoPath}"/>
        <property name="processedCommitsStore" ref="processedCommitsStore"/>
    </bean>

    <bean id="abstractSearchIndexingProcessor" class="org.craftercms.deployer.impl.processors.AbstractSearchIndexingProcessor"
          parent="deploymentProcessor">
        <property name="contextFactory" ref="contextFactory"/>
        <property name="contentStoreService" ref="crafter.contentStoreService"/>
        <property name="xmlFlatteningEnabled" value="${target.search.indexing.xml.flattening.enabled}"/>
    </bean>

    <bean id="searchIndexingProcessor" class="org.craftercms.deployer.impl.processors.SearchIndexingProcessor"
          parent="abstractSearchIndexingProcessor">
        <property name="searchService" ref="searchService"/>
        <property name="batchIndexers">
            <list>
                <ref bean="xmlFileBatchIndexer"/>
                <ref bean="binaryFileBatchIndexer"/>
                <ref bean="binaryFileWithMetadataBatchIndexer"/>
            </list>
        </property>
    </bean>

    <bean id="httpMethodCallProcessor" class="org.craftercms.deployer.impl.processors.HttpMethodCallProcessor"
          parent="deploymentProcessor"/>

    <bean id="commandLineProcessor" class="org.craftercms.deployer.impl.processors.CommandLineProcessor" parent="deploymentProcessor"/>

    <bean id="fileOutputProcessor" class="org.craftercms.deployer.impl.processors.FileOutputProcessor" parent="deploymentProcessor">
        <property name="outputFolder" value="${deployer.main.deployments.output.folderPath}"/>
    </bean>

    <bean id="mailNotificationProcessor" class="org.craftercms.deployer.impl.processors.MailNotificationProcessor"
          parent="deploymentProcessor">
        <property name="emailFactory" ref="emailFactory"/>
        <property name="objectMapper" ref="objectMapper"/>
        <property name="defaultTemplateName" value="${target.notifications.mail.templates.default}"/>
        <property name="defaultFrom" value="${target.notifications.mail.from}"/>
        <property name="defaultSubject" value="${target.notifications.mail.subject}"/>
        <property name="defaultHtml" value="${target.notifications.mail.html}"/>
        <property name="defaultStatusCondition" value="${target.notifications.mail.status}"/>
        <property name="defaultDateTimePattern" value="${target.defaultDateTimePattern}"/>
    </bean>

    <!-- Configuration Profiles -->

    <bean id="s3ProfileLoader" class="org.craftercms.deployer.utils.config.profiles.ConfigurationProfileLoaderImpl">
        <property name="profilesUrl" value="${target.config.profiles.aws.path}"/>
        <property name="profileMapper">
            <bean class="org.craftercms.commons.config.profiles.aws.S3ProfileMapper"/>
        </property>
        <property name="contextFactory" ref="contextFactory"/>
        <property name="contentStoreService" ref="crafter.contentStoreService"/>
    </bean>

    <bean id="boxProfileLoader" class="org.craftercms.deployer.utils.config.profiles.ConfigurationProfileLoaderImpl">
        <property name="profilesUrl" value="${target.config.profiles.box.path}"/>
        <property name="profileMapper">
            <bean class="org.craftercms.commons.config.profiles.box.BoxProfileMapper"/>
        </property>
        <property name="contextFactory" ref="contextFactory"/>
        <property name="contentStoreService" ref="crafter.contentStoreService"/>
    </bean>

    <!-- Core -->

    <bean id="contextFactory" class="org.craftercms.deployer.utils.core.SingletonContextFactory">
        <property name="targetId"
                  value="#{T(org.craftercms.deployer.impl.TargetImpl).getId('${target.env}', '${target.siteName}')}"/>
        <property name="localRepoUrl" value="file:${target.localRepoPath}"/>
        <property name="contentStoreService" ref="crafter.contentStoreService"/>
        <property name="xmlMergingEnabled" value="${target.search.indexing.xml.merging.enabled}"/>
    </bean>

    <!-- Remote File Stores -->

    <bean id="profileAwareRemotePathParser"
          class="org.craftercms.commons.file.stores.impl.PathPartsBasedProfileAwareRemotePathParser"/>

    <bean id="urlRemotePathParser" class="org.craftercms.commons.file.stores.impl.FixedStoreTypeRemotePathParser">
        <property name="storeType" value="url"/>
    </bean>

    <bean id="s3FileStore" class="org.craftercms.commons.file.stores.impl.s3.S3FileStore">
        <property name="profileLoader" ref="s3ProfileLoader"/>
    </bean>

    <bean id="boxFileStore" class="org.craftercms.commons.file.stores.impl.box.BoxFileStore">
        <property name="profileLoader" ref="boxProfileLoader"/>
    </bean>

    <bean id="urlBasedFileStore" class="org.craftercms.commons.file.stores.impl.UrlBasedFileStore"/>

    <bean id="remoteFileResolver" class="org.craftercms.commons.file.stores.impl.RemoteFileResolverImpl">
        <property name="pathParsers">
            <map>
                <!--
                HTTP/HTTPS URLs are only indexed if they contain the protocol (http:// or https://). Protocol
                relative URLs (like //mydoc.pdf) are not supported since the protocol is unknown to the back-end
                indexer.
                -->
                <entry key="^(http:|https:)//.+$" value-ref="urlRemotePathParser"/>
                <entry key="^/?remote-assets/([^/]+)/([^/]+)/(.+)$" value-ref="profileAwareRemotePathParser"/>
            </map>
        </property>
        <property name="stores">
            <map>
                <entry key="s3" value-ref="s3FileStore"/>
                <entry key="box" value-ref="boxFileStore"/>
                <entry key="url" value-ref="urlBasedFileStore"/>
            </map>
        </property>
    </bean>

    <!-- Search -->

    <bean id="includeDescriptorsProcessor"
          class="org.craftercms.commons.core.processors.impl.PageAwareIncludeDescriptorsProcessor">
        <property name="includeElementXPathQuery" value="${target.search.indexing.xml.flattening.includeElementXPathQuery}"/>
        <property name="removeIncludeElement" value="${target.search.indexing.xml.flattening.removeIncludeTags}"/>
        <property name="disabledIncludeNodeXPathQuery" value="${target.search.indexing.xml.flattening.disabledIncludeNodeXPathQuery}"/>
        <property name="pagesPathPattern" value="${target.search.indexing.xml.flattening.pagesPathPattern}"/>
        <property name="includedItemsProcessor" ref="includeDescriptorsProcessor"/>
        <property name="contentStoreService" ref="crafter.contentStoreService"/>
    </bean>

    <bean id="disableAwareIncludeDescriptorsProcessor" class="org.craftercms.commons.spring.ConditionalFactoryBean">
        <property name="flag" value="${target.search.indexing.xml.flattening.enabled}"/>
        <property name="actualBean" ref="includeDescriptorsProcessor"/>
    </bean>

    <bean id="abstractXmlFileBatchIndexer" abstract="true">
        <property name="includePathPatterns"
                  value="#{environment.getProperty('target.search.indexing.xml.includePatterns', T(java.util.List))}"/>
        <property name="itemProcessor" ref="disableAwareIncludeDescriptorsProcessor"/>
    </bean>

    <bean id="xmlFileBatchIndexer" class="org.craftercms.search.batch.impl.XmlFileBatchIndexer"
          parent="abstractXmlFileBatchIndexer">
        <property name="searchService" ref="searchService"/>
    </bean>

    <bean id="abstractBinaryFileBatchIndexer" abstract="true">
        <property name="supportedMimeTypes"
                  value="#{environment.getProperty('target.search.indexing.binary.supportedMimeTypes', T(java.util.List))}"/>
        <property name="maxFileSize" value="${target.search.indexing.binary.maxFileSize}"/>
    </bean>

    <bean id="binaryFileBatchIndexer" class="org.craftercms.search.batch.impl.BinaryFileBatchIndexer"
          parent="abstractBinaryFileBatchIndexer">
        <property name="searchService" ref="searchService"/>
    </bean>

    <bean id="abstractBinaryFileWithMetadataBatchIndexer" abstract="true">
        <property name="supportedMimeTypes"
                  value="#{environment.getProperty('target.search.indexing.binary.supportedMimeTypes', T(java.util.List))}"/>
        <property name="metadataPathPatterns"
                  value="#{environment.getProperty('target.search.indexing.binary.metadataPathPatterns', T(java.util.List))}"/>
        <property name="remoteBinaryPathPatterns"
                  value="#{environment.getProperty('target.search.indexing.binary.remoteBinaryPathPatterns', T(java.util.List))}"/>
        <property name="childBinaryPathPatterns"
                  value="#{environment.getProperty('target.search.indexing.binary.childBinaryPathPatterns', T(java.util.List))}"/>
        <property name="referenceXPaths"
                  value="#{environment.getProperty('target.search.indexing.binary.referenceXPaths', T(java.util.List))}"/>
        <property name="remoteFileResolver" ref="remoteFileResolver"/>
        <property name="itemProcessor" ref="disableAwareIncludeDescriptorsProcessor"/>
        <property name="maxFileSize" value="${target.search.indexing.binary.maxFileSize}"/>
    </bean>

    <bean id="binaryFileWithMetadataBatchIndexer" parent="abstractBinaryFileWithMetadataBatchIndexer"
          class="org.craftercms.search.batch.impl.BinaryFileWithMetadataBatchIndexer">
        <property name="searchService" ref="searchService"/>
    </bean>

    <bean id="searchService" class="org.craftercms.search.service.impl.v2.SolrRestClientSearchService">
        <property name="serverUrl" value="${target.search.serverUrl}"/>
    </bean>

    <bean id="searchAdminService" class="org.craftercms.search.service.impl.v2.RestClientAdminService">
        <property name="serverUrl" value="${target.search.serverUrl}"/>
        <property name="restTemplate" ref="restTemplate"/>
    </bean>

    <!-- Mail -->

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${target.notifications.mail.server.host}"/>
        <property name="port" value="${target.notifications.mail.server.port}"/>
        <property name="protocol" value="${target.notifications.mail.protocol}"/>
        <property name="defaultEncoding" value="${target.notifications.mail.encoding}"/>
    </bean>

    <bean id="mailFreemarkerConfig" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPaths"
                  value="${target.notifications.mail.templates.overrideLocation},${target.notifications.mail.templates.location}"/>
        <property name="defaultEncoding" value="${target.notifications.mail.encoding}"/>
    </bean>

    <bean id="emailFactory" class="org.craftercms.commons.mail.impl.EmailFactoryImpl">
        <property name="mailSender" ref="mailSender"/>
        <property name="freeMarkerConfig" ref="mailFreemarkerConfig"/>
        <property name="templateSuffix" value="${target.notifications.mail.templates.suffix}"/>
        <property name="templateEncoding" value="${target.notifications.mail.encoding}"/>
    </bean>

    <!-- AWS -->

    <bean id="s3SyncProcessor" class="org.craftercms.deployer.impl.processors.aws.S3SyncProcessor"
          parent="deploymentProcessor">
        <property name="localRepoUrl" value="${target.localRepoPath}"/>
    </bean>

    <bean id="cloudfrontInvalidationProcessor" parent="deploymentProcessor"
          class="org.craftercms.deployer.impl.processors.aws.CloudfrontInvalidationProcessor"/>

    <bean id="findAndReplaceProcessor" class="org.craftercms.deployer.impl.processors.FindAndReplaceProcessor"
          parent="deploymentProcessor">
        <property name="localRepoUrl" value="${target.localRepoPath}"/>
    </bean>

    <bean id="delayProcessor" parent="deploymentProcessor"
          class="org.craftercms.deployer.impl.processors.DelayProcessor"/>

    <!-- ElasticSearch -->
    <bean id="elasticSearch" class="org.craftercms.commons.elasticsearch.spring.ElasticSearchClientFactory">
        <property name="serverUrls" value="${target.search.elasticSearch.urls}"/>
    </bean>

    <bean id="tika" class="org.apache.tika.Tika"/>

    <bean id="objectMapper" class="org.craftercms.commons.elasticsearch.jackson.CrafterXmlMapper"/>

    <bean id="elasticSearchAdminService"
          class="org.craftercms.commons.elasticsearch.impl.ElasticSearchAdminServiceImpl">
        <property name="elasticSearchClient" ref="elasticSearch"/>
        <property name="authoringIndexSettings" value="${target.search.elasticSearch.settings.authoring}"/>
        <property name="previewIndexSettings" value="${${target.search.elasticSearch.settings.preview}}"/>
    </bean>

    <bean id="elasticSearchDocumentBuilder"
          class="org.craftercms.commons.elasticsearch.impl.ElasticSearchDocumentBuilder">
        <property name="objectMapper" ref="objectMapper"/>
    </bean>

    <bean id="tikaDocumentParser" class="org.craftercms.commons.elasticsearch.impl.tika.TikaDocumentParser">
        <property name="charLimit" value="${target.search.tika.limit}"/>
        <property name="objectMapper" ref="objectMapper"/>
        <property name="metadataExtractors">
            <list>
                <ref bean="coreTikaMetadataExtractor"/>
                <ref bean="imageTikaMetadataExtractor"/>
                <ref bean="videoTikaMetadataExtractor"/>
            </list>
        </property>
        <property name="tika" ref="tika"/>
    </bean>

    <bean id="elasticSearchService" class="org.craftercms.commons.elasticsearch.impl.ElasticSearchServiceImpl">
        <property name="client" ref="elasticSearch"/>
        <property name="documentBuilder" ref="elasticSearchDocumentBuilder"/>
        <property name="documentParser" ref="tikaDocumentParser"/>
    </bean>

    <bean id="elasticSearchXmlFileBatchIndexer" parent="abstractXmlFileBatchIndexer"
          class="org.craftercms.commons.elasticsearch.batch.ElasticSearchXmlFileBatchIndexer">
        <property name="elasticSearchService" ref="elasticSearchService"/>
    </bean>

    <bean id="elasticSearchBinaryFileBatchIndexer" parent="abstractBinaryFileBatchIndexer"
          class="org.craftercms.commons.elasticsearch.batch.ElasticSearchBinaryFileBatchIndexer">
        <property name="elasticSearchService" ref="elasticSearchService"/>
    </bean>

    <bean id="elasticSearchBinaryFileWithMetadataBatchIndexer" parent="abstractBinaryFileWithMetadataBatchIndexer"
          class="org.craftercms.commons.elasticsearch.batch.ElasticSearchBinaryFileWithMetadataBatchIndexer">
        <property name="elasticSearchService" ref="elasticSearchService"/>
    </bean>

    <bean id="coreTikaMetadataExtractor" class="org.craftercms.commons.elasticsearch.impl.tika.TikaMetadataExtractor">
        <property name="mapping">
            <map>
                <entry key="author" value="#{T(org.apache.tika.metadata.TikaCoreProperties).CREATOR}"/>
                <entry key="title" value="#{T(org.apache.tika.metadata.TikaCoreProperties).TITLE}"/>
                <entry key="keywords" value="#{T(org.apache.tika.metadata.TikaCoreProperties).KEYWORDS}"/>
                <entry key="description" value="#{T(org.apache.tika.metadata.TikaCoreProperties).DESCRIPTION}"/>
                <entry key="contentType" value="#{T(org.apache.tika.metadata.HttpHeaders).CONTENT_TYPE}"/>
                <entry key="contentLength" value="#{T(org.apache.tika.metadata.HttpHeaders).CONTENT_LENGTH}"/>
                <entry key="created" value="#{T(org.apache.tika.metadata.TikaCoreProperties).CREATED}"/>
                <entry key="modified" value="#{T(org.apache.tika.metadata.TikaCoreProperties).MODIFIED}"/>
            </map>
        </property>
    </bean>

    <bean id="imageTikaMetadataExtractor" class="org.craftercms.commons.elasticsearch.impl.tika.TikaMetadataExtractor">
        <property name="supportedMimeTypes" value="image/*,video/*"/>
        <property name="mapping">
            <map>
                <entry key="height" value="#{T(org.apache.tika.metadata.TIFF).IMAGE_LENGTH}"/>
                <entry key="width" value="#{T(org.apache.tika.metadata.TIFF).IMAGE_WIDTH}"/>
            </map>
        </property>
    </bean>

    <bean id="videoTikaMetadataExtractor" class="org.craftercms.commons.elasticsearch.impl.tika.TikaMetadataExtractor">
        <property name="supportedMimeTypes" value="video/*"/>
        <property name="mapping">
            <map>
                <entry key="duration" value="#{T(org.apache.tika.metadata.XMPDM).DURATION}"/>
                <entry key="frameRate" value="#{T(org.apache.tika.metadata.XMPDM).VIDEO_FRAME_RATE}"/>
            </map>
        </property>
    </bean>

    <bean id="elasticSearchIndexingProcessor" parent="abstractSearchIndexingProcessor"
          class="org.craftercms.deployer.impl.processors.elasticsearch.ElasticSearchIndexingProcessor">
        <property name="elasticSearchService" ref="elasticSearchService"/>
        <property name="batchIndexers">
            <list>
                <ref bean="elasticSearchXmlFileBatchIndexer"/>
                <ref bean="elasticSearchBinaryFileBatchIndexer"/>
                <ref bean="elasticSearchBinaryFileWithMetadataBatchIndexer"/>
            </list>
        </property>
    </bean>

    <bean id="authoringElasticSearchBinaryFileBatchIndexer" parent="abstractBinaryFileBatchIndexer"
          class="org.craftercms.commons.elasticsearch.batch.ElasticSearchBinaryFileBatchIndexer">
        <property name="elasticSearchService" ref="elasticSearchService"/>
        <property name="supportedMimeTypes"
                  value="#{environment.getProperty('target.search.indexing.binary.authoring.supportedMimeTypes', T(java.util.List))}"/>
    </bean>

    <bean id="authoringElasticSearchBinaryFileWithMetadataBatchIndexer"
          parent="abstractBinaryFileWithMetadataBatchIndexer"
          class="org.craftercms.commons.elasticsearch.batch.ElasticSearchBinaryFileWithMetadataBatchIndexer">
        <property name="elasticSearchService" ref="elasticSearchService"/>
        <property name="supportedMimeTypes"
                  value="#{environment.getProperty('target.search.indexing.binary.authoring.supportedMimeTypes', T(java.util.List))}"/>
        <property name="metadataPathPatterns"
                  value="#{environment.getProperty('target.search.indexing.binary.authoring.metadataPathPatterns', T(java.util.List))}"/>
        <property name="referenceXPaths"
                  value="#{environment.getProperty('target.search.indexing.binary.authoring.referenceXPaths', T(java.util.List))}"/>
    </bean>

    <bean id="authoringElasticSearchIndexingProcessor" parent="elasticSearchIndexingProcessor">
        <property name="batchIndexers">
            <list>
                <ref bean="elasticSearchXmlFileBatchIndexer"/>
                <ref bean="authoringElasticSearchBinaryFileBatchIndexer"/>
                <ref bean="authoringElasticSearchBinaryFileWithMetadataBatchIndexer"/>
            </list>
        </property>
    </bean>

</beans>